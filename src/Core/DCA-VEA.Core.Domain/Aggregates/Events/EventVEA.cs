using DCA_VEA.Core.Domain.Common.Bases;
using DCA_VEA.Core.Domain.Common.Values;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;

[assembly: InternalsVisibleTo("xUnitTests")]


namespace DCA_VEA.Core.Domain.Aggregates.Events
{
    internal class EventVEA : AggregateRoot<EventVEAId>
    {
        public EventVEAId Id { get; private set; }
        private string Title;
        private string Description;
        private TimeInterval Date;
        private bool IsPrivate;
        private int MaxGuests;
        private EventVEAStatus Status;


        // Private constructor to prevent direct instantiation without using the factory method
        private EventVEA()
        {
            Description = "";
            IsPrivate = true;
            MaxGuests = 5;
            Status = EventVEAStatus.Draft;
        }

        // Factory method for creating an "empty" EventVEA
        public static EventVEA CreateEmpty()
        {
            // Since Id is auto-generated by EF, no need to set it here.
            return new EventVEA();
        }

    }
}
